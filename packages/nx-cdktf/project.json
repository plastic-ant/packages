{
  "name": "nx-cdktf",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "packages/nx-cdktf/src",
  "projectType": "library",
  "tags": ["#nx-plugin"],
  "targets": {
    "build": {
      "executor": "@nx/js:swc",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "production",
      "options": {
        "outputPath": "dist/packages/nx-cdktf",
        "tsConfig": "packages/nx-cdktf/tsconfig.lib.json",
        "main": "packages/nx-cdktf/src/index.ts",
        "assets": [
          {
            "input": "packages/nx-cdktf",
            "glob": "**/files/**",
            "output": "/"
          },
          {
            "input": "packages/nx-cdktf",
            "glob": "**/files/**/.gitkeep",
            "output": "/"
          },
          {
            "input": "packages/nx-cdktf",
            "glob": "**/*.json",
            "ignore": ["**/tsconfig*.json", "project.json", ".eslintrc.json"],
            "output": "/"
          },
          {
            "input": "packages/nx-cdktf",
            "glob": "**/*.js",
            "ignore": ["**/jest.config.js"],
            "output": "/"
          },
          {
            "input": "packages/nx-cdktf",
            "glob": "**/*.d.ts",
            "output": "/"
          },
          {
            "input": "packages/nx-cdktf",
            "glob": "{LICENSE,README.md}",
            "output": "/"
          }
        ]
      }
    },
    "version": {
      "executor": "@jscutlery/semver:version",
      "parallelism": false,
      "options": {
        "push": true,
        "preset": "conventionalcommits",
        "baseBranch": "main",
        "tagPrefix": "{projectName}@",
        "commitMessageFormat": "chore({projectName}): release version {version} [skip ci]",
        "postTargets": ["build", "npm", "github"]
      }
    },
    "github": {
      "executor": "@jscutlery/semver:github",
      "options": {
        "tag": "{tag}",
        "notes": "{notes}"
      }
    },
    "npm": {
      "executor": "ngx-deploy-npm:deploy",
      "options": {
        "access": "public",
        "scope": "plastic-ant",
        "distFolderPath": "dist/{projectRoot}"
      }
    }
  }
}
