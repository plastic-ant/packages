/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface BootstrapExecutorOptions {
  postTargets?: string[];
  region: string;
  account: string;
  /**
   * Include "aws:asset:*" CloudFormation metadata for resources that use assets
   */
  assetMetadata?: boolean;
  /**
   * The name of the CDK toolkit bucket; bucket will be created and
   * must not exist
   */
  bootstrapBucketName?: string;
  /**
   * Create a Customer Master Key (CMK) for the bootstrap
   * bucket (you will be charged but can customize
   * permissions, modern bootstrapping only)
   */
  bootstrapCustomerKey?: string;
  /**
   * AWS KMS master key ID used for the SSE-KMS encryption
   */
  bootstrapKmsKeyId?: string;
  /**
   * Path to CA certificate to use when validating HTTPS
   * requests.
   */
  caBundlePath?: string;
  /**
   * The Managed Policy ARNs that should be attached to the
   * role performing deployments into this environment (may be repeated, modern bootstrapping only)
   */
  cfnExecutionPolicy?: string;
  /**
   * Show colors and other style from console output
   */
  color?: boolean & string;
  /**
   * Additional context
   */
  context?: string;
  /**
   * Use the permissions boundary specified by name.
   */
  customPermissionsBoundary?: string;
  /**
   * enable emission of additional debugging information, such as creation stack
   * traces of tokens
   */
  debug?: boolean;
  /**
   * Force trying to fetch EC2 instance credentials
   */
  ec2Creds?: boolean & string;
  /**
   * The target AWS environments to deploy the bootstrap stack to.
   * Uses the following format: `aws://<account-id>/<region>`
   */
  environments?: string & string[];
  /**
   * Use the example permissions boundary.
   */
  examplePermissionsBoundary?: boolean & string;
  /**
   * Whether to execute ChangeSet (--no-execute will NOT execute
   * the ChangeSet)
   */
  execute?: boolean;
  /**
   * Always bootstrap even if it would downgrade template version
   */
  force?: boolean;
  /**
   * Ignores synthesis errors, which will likely produce an invalid output
   */
  ignoreErrors?: boolean;
  /**
   * Use JSON output instead of YAML when templates are printed
   * to STDOUT
   */
  json?: boolean;
  /**
   * Perform context lookups.
   *
   * Synthesis fails if this is disabled and context lookups need
   * to be performed
   */
  lookups?: boolean;
  /**
   * Show relevant notices
   */
  notices?: boolean;
  /**
   * Include "aws:cdk:path" CloudFormation metadata for each resource
   */
  pathMetadata?: boolean;
  /**
   * Use the indicated AWS profile as the default environment
   */
  profile?: string;
  /**
   * Use the indicated proxy. Will read from
   * HTTPS_PROXY environment if specified
   */
  proxy?: string;
  /**
   * Block public access configuration on CDK toolkit
   * bucket (enabled by default)
   */
  publicAccessBlockConfiguration?: string;
  /**
   * String which must be unique for each bootstrap stack. You
   * must configure it on your CDK app if you change this
   * from the default.
   */
  qualifier?: string;
  /**
   * Role to pass to CloudFormation for deployment
   */
  roleArn?: string;
  /**
   * Instead of actual bootstrapping, print the current
   * CLI\'s bootstrapping template to stdout for customization
   */
  showTemplate?: boolean;
  /**
   * List of stacks to deploy
   */
  stacks?: string & string[];
  /**
   * Copy assets to the output directory
   *
   * Needed for local debugging the source files with SAM CLI
   */
  staging?: boolean;
  /**
   * Do not construct stacks with warnings
   */
  strict?: boolean;
  /**
   * Use the template from the given file instead of the
   * built-in one (use --show-template to obtain an example)
   */
  template?: string;
  /**
   * Toggle CloudFormation termination protection on the
   * bootstrap stacks
   */
  terminationProtection?: boolean;
  /**
   * The name of the CDK toolkit stack to create
   */
  toolkitStackName?: string;
  /**
   * Print trace for stack warnings
   */
  trace?: boolean;
  /**
   * The AWS account IDs that should be trusted to perform
   * deployments into this environment (may be repeated,
   * modern bootstrapping only)
   */
  trust?: string;
  /**
   * The AWS account IDs that should be trusted to look
   * up values in this environment (may be repeated,
   * modern bootstrapping only)
   */
  trustForLookup?: string;
  /**
   * Use previous values for existing parameters (you must specify
   * all parameters on every deployment if this is disabled)
   */
  usePreviousParameters?: boolean;
  /**
   * show debug logs
   */
  verbose?: boolean;
  /**
   * Include "AWS::CDK::Metadata" resource in synthesized templates
   */
  versionReporting?: boolean;
}
